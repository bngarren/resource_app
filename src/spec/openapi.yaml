openapi: 3.0.3
info:
  description: |
    This is for the Resource App server
  version: 1.0.1
  title: Resource App
  termsOfService: http://swagger.io/terms/
tags:
  - name: Scan
    description: Scanning for resources and interactables
  - name: Resources
    description: Access to Resources
  - name: Users
    description: Operations for users
paths:
  /scan:
    post:
      summary: Performs the scan action for a user
      description: >-
        A user (at a GPS location) scans and receives data about nearby
        resources and interactables
      tags:
        - Scan
      operationId: scan
      requestBody:
        required: true
        description: | 
          A user position (latitude/longitude coordinates) is required to perform the scan.
          This should be in the form of a tuple: [latitude, longitude]
          
          A user property with user data is optional (a scan doesn't have to be performed by an app user per se)
        content:
          application/json:
            schema:
              type: object
              required:
                - userPosition
              properties:
                user:
                  type: object
                  required:
                    - uuid
                  properties:
                    uuid: 
                      type: string
                userPosition:
                  $ref: "#/components/schemas/Coordinate"
      responses:
        '200':
          description: |
            A successful scan returns metadata and interactables.
            
            Metadata includes where the scan location occurred, timestamp, etc.
            
            Interactables can include resources, machines, etc. Each of which is an object
            that provides info on the position, distance from user, and whether the user can
            interact with it (i.e. is close enough to it)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanResult"
        "400": 
          $ref: "#/components/responses/400BadRequest"
        "403":
          $ref: "#/components/responses/403NotAuthorized"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
servers:
  - url: https://virtserver.swaggerhub.com/BNGARREN_1/resource-app/1.0.1
components:
  schemas:
    Coordinate:
      $ref: "./schemas/Coordinate.yaml"
    Region:
      $ref: "./schemas/Region.yaml"
    Resource:
      $ref: "./schemas/Resource.yaml"
    ScanResult:
      $ref: "./schemas/ScanResult.yaml"
    Interactable:
      $ref: "./schemas/Interactable.yaml"
    ScannedResource:
      $ref: "./schemas/ScannedResource.yaml"
    ScannedRegion:
      $ref: "./schemas/ScannedRegion.yaml"
    # Schema for error response body
    ErrorResponse:
      type: object
      description: |
        Describes the shape of an Error response to the client. For example, the client should receive json
        containing `code` and `message` properties.
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  responses:
    400BadRequest:
      description: "The request was invalid"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    403NotAuthorized:
      description: "Not authorized"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'