{
  "openapi" : "3.0.3",
  "info" : {
    "description" : "This is for the Resource App server\n",
    "version" : "1.0.1",
    "title" : "Resource App",
    "termsOfService" : "http://swagger.io/terms/"
  },
  "tags" : [ {
    "name" : "Scan",
    "description" : "Scanning for resources and interactables"
  }, {
    "name" : "Resources",
    "description" : "Access to Resources"
  }, {
    "name" : "Users",
    "description" : "Operations for users"
  } ],
  "paths" : {
    "/scan" : {
      "post" : {
        "summary" : "Performs the scan action for a user",
        "description" : "A user (at a GPS location) scans and receives data about nearby resources and interactables",
        "tags" : [ "Scan" ],
        "operationId" : "scan",
        "requestBody" : {
          "required" : true,
          "description" : "A user position (latitude/longitude coordinates) is required to perform the scan.\nThis should be in the form of a tuple: [latitude, longitude]\n\nA user property with user data is optional (a scan doesn't have to be performed by an app user per se)\n",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "userPosition" ],
                "properties" : {
                  "user" : {
                    "type" : "object",
                    "required" : [ "uuid" ],
                    "properties" : {
                      "uuid" : {
                        "type" : "string"
                      }
                    }
                  },
                  "userPosition" : {
                    "$ref" : "#/components/schemas/Coordinate"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A successful scan returns metadata and interactables.\n\nMetadata includes where the scan location occurred, timestamp, etc.\n\nInteractables can include resources, machines, etc. Each of which is an object\nthat provides info on the position, distance from user, and whether the user can\ninteract with it (i.e. is close enough to it)\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScanResult"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400BadRequest"
          },
          "403" : {
            "$ref" : "#/components/responses/403NotAuthorized"
          },
          "default" : {
            "description" : "Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/BNGARREN_1/resource-app/1.0.1"
  } ],
  "components" : {
    "schemas" : {
      "Coordinate" : {
        "type" : "array",
        "minItems" : 2,
        "maxItems" : 2,
        "items" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "Region" : {
        "type" : "object",
        "description" : "A Region representation for server/client. It may mirror the RegionModel and json schema used\nin the data access layer/ORM, but is separately defined here for the API.\n",
        "required" : [ "id", "h3Index", "reset_date" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "h3Index" : {
            "type" : "string"
          },
          "reset_date" : {
            "type" : "string"
          }
        }
      },
      "Resource" : {
        "type" : "object",
        "description" : "A Resource representation for server/client. It may mirror the ResourceModel and json schema used\nin the data access layer/ORM, but is separately defined here for the API.\n",
        "required" : [ "id", "name", "region_id", "h3Index" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "region_id" : {
            "type" : "string"
          },
          "h3Index" : {
            "type" : "string"
          }
        }
      },
      "ScanResult" : {
        "type" : "object",
        "required" : [ "metadata", "interactables", "scannedRegions" ],
        "properties" : {
          "metadata" : {
            "type" : "object",
            "properties" : {
              "scannedLocation" : {
                "$ref" : "#/components/schemas/Coordinate"
              },
              "timestamp" : {
                "type" : "string"
              }
            }
          },
          "interactables" : {
            "type" : "object",
            "required" : [ "scannedResources" ],
            "properties" : {
              "scannedResources" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ScannedResource"
                }
              }
            }
          },
          "scannedRegions" : {
            "type" : "array",
            "minItems" : 7,
            "items" : {
              "$ref" : "#/components/schemas/ScannedRegion"
            }
          }
        }
      },
      "Interactable" : {
        "type" : "object",
        "description" : "An Interactable represents an object in the environment which a user can interact. \n\nThis could include a resource or a machine, for instance.\n\nAn Interactable object describes:\n  - Where it is located (latitude, longitude)\n  - How far it is from the user (scan location)\n  - Whether the user can interact with it (i.e. is the user within range?)\n",
        "required" : [ "position", "distanceFromUser", "userCanInteract" ],
        "properties" : {
          "position" : {
            "$ref" : "#/components/schemas/Coordinate"
          },
          "distanceFromUser" : {
            "type" : "integer",
            "minimum" : 0
          },
          "userCanInteract" : {
            "type" : "boolean"
          }
        }
      },
      "ScannedResource" : {
        "description" : "An array of ScannedResources is returned to the client after a successful scan operation.\nThis object includes the properties of a Resource and additional information, e.g.,\nthe vertices of the hexagon for drawing.\n",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Interactable"
        }, {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "type" : "object",
          "properties" : {
            "vertices" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              }
            }
          }
        } ]
      },
      "ScannedRegion" : {
        "description" : "An array of ScannedRegions is returned to the client after a successful scan operation.\nThe ScannedRegion object contains properties of the Region in the scan area\n",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Region"
        } ]
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ]
      }
    },
    "responses" : {
      "400BadRequest" : {
        "description" : "The request was invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "403NotAuthorized" : {
        "description" : "Not authorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}