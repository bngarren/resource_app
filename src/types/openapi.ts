/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/scan": {
    /** A user (at a GPS location) scans and receives data about nearby resources and interactables */
    post: operations["scan"];
  };
}

export interface components {
  schemas: {
    Coordinate: [number, number];
    /**
     * @description A Resource representation for server/client. It may mirror the ResourceModel and json schema used
     * in the data access layer/ORM, but is separately defined here for the API.
     */
    Resource: {
      id: number;
      name: string;
      region_id: string;
      h3Index: string;
    };
    /**
     * @description An Interactable represents an object in the environment which a user can interact.
     *
     * This could include a resource or a machine, for instance.
     *
     * An Interactable object describes:
     *   - Where it is located (latitude, longitude)
     *   - How far it is from the user (scan location)
     *   - Whether the user can interact with it (i.e. is the user within range?)
     */
    Interactable: {
      position: components["schemas"]["Coordinate"];
      distanceFromUser: number;
      userCanInteract: boolean;
    };
    /**
     * @description An array of ScannedResources is returned to the client after a successful scan operation.
     * This object includes the properties of a Resource and additional information, e.g.,
     * the vertices of the hexagon for drawing.
     */
    ScannedResource: components["schemas"]["Interactable"] &
      components["schemas"]["Resource"] & {
        vertices?: number[][];
      };
    Error: {
      code: string;
      message: string;
    };
  };
  responses: {
    /** The request was invalid */
    "400BadRequest": {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** Not authorized */
    "403NotAuthorized": {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
}

export interface operations {
  /** A user (at a GPS location) scans and receives data about nearby resources and interactables */
  scan: {
    responses: {
      /**
       * A successful scan returns metadata and interactables.
       *
       * Metadata includes where the scan location occurred, timestamp, etc.
       *
       * Interactables can include resources, machines, etc. Each of which is an object
       * that provides info on the position, distance from user, and whether the user can
       * interact with it (i.e. is close enough to it)
       */
      200: {
        content: {
          "application/json": {
            metadata: {
              scannedLocation?: components["schemas"]["Coordinate"];
              timestamp?: string;
            };
            interactables: {
              scannedResources?: components["schemas"]["ScannedResource"][];
            };
          };
        };
      };
      400: components["responses"]["400BadRequest"];
      403: components["responses"]["403NotAuthorized"];
    };
    /**
     * A user position (latitude/longitude coordinates) is required to perform the scan.
     * This should be in the form of a tuple: [latitude, longitude]
     *
     * A user property with user data is optional (a scan doesn't have to be performed by an app user per se)
     */
    requestBody: {
      content: {
        "application/json": {
          user?: {
            uuid: string;
          };
          userPosition: components["schemas"]["Coordinate"];
        };
      };
    };
  };
}

export interface external {}
